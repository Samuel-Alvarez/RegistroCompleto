@page "/Persona"
@page "/Persona/{PersonaId:int}"
@inject IToastService toast

@inject Contexto _contexto;

<EditForm Model="persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro de Personas</h3>
        </div>
        <div class="card-body">

            <div class="form-group">
                <label>Nombre</label>
                <InputText @bind-Value="persona.Nombre" class="form-control" />
                <ValidationMessage For="@(() => persona.Nombre)" />
            </div>

            <div class="form-group">
                <label>Apellido</label>
                <InputNumber @bind-Value="persona.Apellido" class="form-control" />
                <ValidationMessage For="@(() => persona.Apellido)" />
            </div>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>

        </div>
    </div>
</EditForm>
@code {

    [Parameter]
    public int PersonaId { get; set; }

    public Personas persona { get; set; }= new Personas();

    private PersonasBLL personasBLL;

    protected override void OnInitialized()
    {
        base.OnInitialized();
         personasBLL = new PersonasBLL(_contexto);
    }

    private void Nuevo()
    {
        persona = new Personas();
    }

    private void Buscar()
    {
        if (persona.PersonaId > 0)
        {
              var encontrado = personasBLL.Buscar(persona.PersonaId);
            Nuevo();
            if (encontrado != null)
                this.persona = encontrado;
            else
            {
                toast.ShowWarning($"No se ha encontrado la tarea con el id ingresado");
            }  

        }
    }

    public void Guardar()
    {
        var guardado = personasBLL.Guardar(persona);

        if (guardado)
        {
            Nuevo();
            toast.ShowInfo("La tarea se guardo correctamente");
        }
        else
        {
            toast.ShowWarning("La tarea no se guardo");
        }

    }

    public void Eliminar()
    {
        bool eliminado;

        eliminado = false; //personaesBLL.Eliminar(persona.personaId);

        if (eliminado)
        {
            Nuevo();
            toast.ShowInfo("La tarea se elimino correctamente");
        }
        else
        {
            toast.ShowWarning("La tarea no se elimino");
        }

    }

}